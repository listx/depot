PLEASE view this file in PLAINTEXT, as I do not know how to use rdoc.

== Deployment

To get this app running, first run the migrations with "rake db:migrate" and
then try out "rails server" to see that it works with WEBrick.

If so, then you can install apache and also phusion passenger (aka "passenger").

First, after installing apache and passenger, make sure it works at all by doing

	$ sudo apachectl restart

and putting in the URL (or IP ADDRESS) of your remote server.

Now, to get my Rails app served with Apache/Passenger installation on Centos 7,
I needed to do the following:

* Comment out all lines in "/etc/httpd/conf.d/welcome.conf" to get rid of the
  default welcome page.

* Create the file "etc/httpd/conf.d/passenger.conf", and add the following lines
  to it:

	LoadModule passenger_module /home/l/.rvm/gems/ruby-2.0.0-p576/gems/passenger-4.0.53/buildout/apache2/mod_passenger.so
	<IfModule mod_passenger.c>
	  PassengerRoot /home/l/.rvm/gems/ruby-2.0.0-p576/gems/passenger-4.0.53
	  PassengerDefaultRuby /home/l/.rvm/gems/ruby-2.0.0-p576/wrappers/ruby
	</IfModule>

(The exact nature of this is dependent on your particular passenger
installation; I got this by running the command
"passenger-install-apache2-module").

* Create the file "/etc/httpd/conf.d/virtualhost.conf", and add the following lines to it:

	RackEnv development

	<VirtualHost *:80>
	   ServerName depot.myhostislinode.com
	   # !!! Be sure to point DocumentRoot to 'public'!
	   DocumentRoot /var/www/html/depot/public
	   <Directory /var/www/html/depot/public>
		  # This relaxes Apache security settings.
		  AllowOverride all
		  # MultiViews must be turned off.
		  Options -MultiViews
		  # Uncomment this if you're on Apache >= 2.4:
		  #Require all granted
	   </Directory>
	</VirtualHost>

* Lastly, as Apache by default points to /var/www/html, I needed to symlink my
  Rails app's root folder, like this:

	$ cd /var/www/html
	$ ln -s /home/l/some/path/to/my/app/named/depot

== Post-deployment

To add books, you have to first create a new administrative user. You can do
this with the rails console: "User.create(name: 'yourname', password:
'yourpassword', password_confirmation: 'yourpassword')"

To use Postgresql (PG) for the database, I needed to do:

* Install postgresql (and also postgresql-server)

* Enable/start postgresql with 'sudo systemctl enable postgresql.service' and
  also 'sudo systemctl start postgresql.service'.

* Create a PG user, with

	$ sudo -u postgres psql
	postgres=# \du
	postgres=# create role depot_role login createdb;
	postgres=# \du
	postgres=# \q

* Modify my database.yml file to be like this:

    default: &default
      adapter: postgresql
      encoding: unicode
      pool: 5

    development:
      <<: *default
      user: depot_role
      database: depot_development

    # Warning: The database defined as "test" will be erased and
    # re-generated from your development database when you run "rake".
    # Do not set this db to the same as development or production.
    test:
      <<: *default
      user: depot_role
      database: depot_test

    production:
      <<: *default
      user: depot_role
      database: depot_production

(Notice how in 'user: depot_role', we give the name of the PG role that we created).

* Set up the db (and apply all migrations) with 'rake db:setup RAILS_ENV=production'.

You might be wondering why we didn't use the 'postgres' role that comes
pre-installed by default with Centos's "postgresql" (or is it
"postgresql-server"?) package. The reason is because that user has superuser
privileges within PG, and our depot app certainly does not need such high level
privileges. This is basically a security issue (I am assuming that doing this
prevents our exploited/rogue app from doing damage to other data stored in PG in
our server --- which is important if we're running, for example, multiple
webapps with multiple databases all in the same PG instance).

== Securing your server

I followed this page https://www.linode.com/docs/security/securing-your-server and used iptables to block spurious traffic.
